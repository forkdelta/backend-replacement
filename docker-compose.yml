version: '2'
services:
  contract_observer:
    image: forkdelta/backend
    build: .
    depends_on:
      - postgres
      - redis
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      HTTP_PROVIDER_URL: ${HTTP_PROVIDER_URL}
      WS_PROVIDER_URL: ${WS_PROVIDER_URL}
      COMPONENT: contract_observer
      MIGRATION: head
    links:
      - postgres
      - redis

  etherdelta_observer:
    image: forkdelta/backend
    build: .
    depends_on:
      - postgres
      - redis
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      HTTP_PROVIDER_URL: ${HTTP_PROVIDER_URL}
      COMPONENT: etherdelta_observer
    links:
      - postgres
      - redis

  huey_consumer:
    image: forkdelta/backend
    build: .
    depends_on:
      - postgres
      - redis
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      HTTP_PROVIDER_URL: ${HTTP_PROVIDER_URL}
      HUEY_CONCURRENCY: ${HUEY_CONCURRENCY}
      COMPONENT: huey_consumer
    links:
      - postgres
      - redis

  ticker:
    image: forkdelta/backend
    build: .
    depends_on:
      - postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      HTTP_PROVIDER_URL: ${HTTP_PROVIDER_URL}
      COMPONENT: ticker
    links:
      - postgres

  websocket_server:
    image: forkdelta/backend
    build: .
    depends_on:
      - postgres
      - redis
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      HTTP_PROVIDER_URL: ${HTTP_PROVIDER_URL}
      COMPONENT: websocket_server
    links:
      - postgres
      - redis

  postgres:
    image: postgres:10-alpine
    ports:
      - 5431:5432
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - /var/lib/postgresql/data

  redis:
    image: redis:4.0-alpine
